{# Button Macro with defaults #}
{% macro icon(icon = 'question-circle') %}{% apply spaceless %}
    {% set icon = icon|replace({'fa-': ''}) %}

    <i class="fas fa-fw fa-{{ icon }}"></i>
{% endapply %}{% endmacro %}

{% macro button(label = 'Button', icon = 'question-circle', class = 'tertiary', attr = []) %}{% apply spaceless %}

    {% set label = label|trans %}
    {% set icon = icon|replace({'fa-': ''}) %}
    {% set class = class|replace({'btn-': ''}) %}
    {% set attr = attr %}

    <button class="btn btn-{{ class }} mb-3"
        {% for key,value in attr %} {{ key }}="{{value}}"{% endfor %}>
        <i class="fas fa-fw fa-{{ icon }} mr-2"></i>
        {{- label -}}
    </button>

{% endapply %}{% endmacro %}

{% macro buttonlink(label = 'Button', link = '', icon = 'question-circle', class = 'tertiary', attr = [], translate = true) %}{% apply spaceless %}

    {% if translate %}
        {% set label = label|trans %}
    {% endif %}
    {% set icon = icon|replace({'fa-': ''}) %}
    {% set class = class|replace({'btn-': ''}) %}
    {% set attr = attr %}

    <a href="{{ link }}" class="btn btn-{{ class|split(' ')|join(' btn-') }} mb-3 text-nowrap"
        {% for key,value in attr %} {{ key }}="{{value}}"{% endfor %}>
        <i class="fas fa-fw fa-{{ icon }} mr-1"></i>
        {{- label -}}
    </a>

{% endapply %}{% endmacro %}

{% macro generate_collection_fields(collectionField, fields) %}{% apply spaceless %}
    {% set fieldsHtml = [] %}
    {% for item_field in fields %}
        {% set collectionItemName = 'collections[' ~ collectionField.name ~ '][' ~ item_field.definition.name ~ ']' %}
        {% if item_field.definition.type == 'set' %}
            {% set hash = item_field.hash %}
        {% else %}
            {# non-set fields do not have hashes, so we create a 'dummy' hash from the current loop index. #}
            {% set hash = loop.index0 %}
            {% set collectionItemName = collectionItemName ~ '[' ~ hash ~ ']' %}
        {% endif %}

        {% set new_field %}
            {% set context = {
                'field': item_field,
                'in_collection': true,
                'is_first': loop.index0 == 0,
                'is_last': loop.index == fields|length,
                'name': collectionItemName,
                'collection_name': collectionField.name,
                'collection_label': collectionField.definition.label,
                'hash': hash
            } %}
            {% include '@bolt/_partials/fields/' ~ item_field.type ~ '.html.twig' with context only %}
        {% endset %}
        {# set the label manually as set in _base.html.twig, to pass to Collection.vue for templates #}
        {% set label = item_field.definition.label|default(item_field.name|default('unnamed')|ucwords) %}
        {% set fieldsHtml = fieldsHtml|merge([{'html': new_field, 'hash': hash, 'label': label}]) %}
    {% endfor %}
    {{ fieldsHtml|json_encode }}
{% endapply %}{% endmacro %}
