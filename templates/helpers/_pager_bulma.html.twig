{% if records.haveToPaginate|default() %}

    {% set route = 'listing' %}
    {% set routeParams = app.request.get('_route_params') %}


    {# The Pagerfanta function allows you to configure what is paginated,
       the theme (template) to use for it, as well as a number of other options.
       See: https://github.com/whiteoctober/WhiteOctoberPagerfantaBundle #}

    <div class="{{ class }}">
        {{ pagerfanta(records, theme, {
            'proximity': surround
        }) }}
    </div>

    <div class="navigation text-center">
        <ul class="pagination">
            {% if records.hasPreviousPage %}
                {% set p = routeParams|merge({page: records.previousPage}) %}
                <li class="prev"><a href="{{ path(route, p) }}" rel="previous"><i class="fa fw fa-long-arrow-left"></i> Previous</a></li>
            {% else %}
                <li class="prev disabled"><span><i class="fa fw fa-arrow-left"></i> Previous</span></li>
            {% endif %}

            {% for i in 1 .. records.nbPages %}
                {% if i == records.currentPage %}
                    <li class="active"><span>{{ i }} <span class="sr-only">(current)</span></span></li>
                {% else %}
                    {% set p = routeParams|merge({page: i}) %}
                    <li><a href="{{ path(route, p) }}">{{ i }}</a></li>
                {% endif %}
            {% endfor %}

            {% if records.hasNextPage %}
                {% set p = routeParams|merge({page: records.nextPage}) %}
                <li class="prev"><a href="{{ path(route, p) }}" rel="next">Next <i class="fa fw fa-arrow-right"></i></a></li>
            {% else %}
                <li class="next disabled"><span>Next <i class="fa fw fa-arrow-right"></i></span></li>
            {% endif %}
        </ul>
    </div>
{% endif %}
